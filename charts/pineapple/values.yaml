
core:
  image:
    repository: docker.4pd.io/adc/pineapple/core
    tag: latest
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi

  replicaCount: 1

  # 此处的ENV配置都会加入到core模块对Pod的环境变量中
  extraEnv:
    PINEAPPLE_ENV_CHARTSDIR: /root/charts/environment

    PINEAPPLE_STORAGE_USER_QUOTA: "10000000000" # 10GB
    PINEAPPLE_PVC_CHARTSDIR: /root/charts/cephfs-pvc
    PINEAPPLE_PVC_CEPH_JSON_DIR: /root/config/cephfs-info.yaml

    # mongodb
    PINEAPPLE_MONGODB_URL: mongodb://localhost:27017
    PINEAPPLE_MONGODB_DATABASE: myapp

webterminal:
  replicaCount: 1
  image:
    repository: docker.4pd.io/adc/pineapple/webterminal
    tag: 21.4.1
    pullPolicy: Always
  resources:
    server:
      limits:
        cpu: 2
        memory: 4Gi
      requests:
        cpu: 2
        memory: 4Gi
    gotty:
      limits:
        cpu: 2
        memory: 4Gi
      requests:
        cpu: 2
        memory: 4Gi

portal:
  replicaCount: 1

  image:
    repository: docker.4pd.io/adc/pineapple/portal
    tag: latest
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi

billing:
  replicaCount: 1

  image:
    repository: docker.4pd.io/adc/pineapple/billing
    tag: 0.1.1
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi

  mongodb:
    dbName: mydb
    url: mongodb://localhost:27017

  # 此处的ENV配置都会加入到core模块对Pod的环境变量中，一般来说不需要填写
  extraEnv:

webhook:
  image:
    repository: docker.4pd.io/adc/pineapple/webhook
    tag: latest
    pullPolicy: Always
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 1
      memory: 2Gi
  port:
    containerPort: 8443
    servicePort: 443
  # webhook所使用证书，由于是集群内部认证，推荐使用自签证书或者如下证书
  tls:
    # required
    cert:
    # required
    key:
    # required
    ca:

# 集群大部分服务签发所用的根证书，主要是方便内部绕到外部访问keycloak等服务的https端口
# 目前主要是core模块以及webterminal模块使用
rootCA: "pineapple-ca"

keycloak:
  # required
  clientID:
  # required
  url:

harbor:
  url: https://harbor.pineapple.com:32443
  basepath: /api/v2.0
  basepathV1: /api
  # 每个用户在harbor上使用的存储上限
  storage: "50000000000" # 50G
  admin_username: admin
  admin_password: password

userCeph:
  cephfs:
    monitors:
      - localhost
    path: /inf
    user: pineappleUser
  cephSecret:
    key: secret

# 这个ceph的账号需要p权限，能够调整用户使用额度上限
webserverCeph:
  cephfs:
    monitors:
      - 172.24.15.114
    path: /inf
    user: pineappleAdmin
  cephSecret:
    key: secret
  capacity:
    storage: 20Gi

# 对外开放访问配置
expose:
  # 用户自己应用中暴露的服务对应的域名
  externalUsersDomain: users.pineapple-test.com

  # pineapple项目组件对外的service配置，一般不需要改，特定情况下可以改为NodePort
  service:
    type: ClusterIP
    port: 80

  # host以及url需要配对, proxy-body-size 以及 proxy-buffer-size 比较重要，在keycloak对应的ingress中需要配置，否则某些请求无法处理
  externalIngress:
    host: pineapple.com
    tls:
      enable: false
      secretName: pineapple-tls
    url: https://pineapple.com:32443
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 1g
      nginx.ingress.kubernetes.io/proxy-buffer-size: 8k

tolerations: []

affinity: {}

nodeSelector: {}

appConf:
  ingressClass: nginx